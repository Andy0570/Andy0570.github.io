<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>独木舟的木</title>
  <icon>https://andy0570.com/icon.png</icon>
  <subtitle>iOS Developer</subtitle>
  <link href="https://andy0570.com/atom.xml" rel="self"/>
  
  <link href="https://andy0570.com/"/>
  <updated>2019-05-16T08:47:15.000Z</updated>
  <id>https://andy0570.com/</id>
  
  <author>
    <name>独木舟的木</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 OpenSSL 命令行管理证书</title>
    <link href="https://andy0570.com/2019/05/09/%E4%BD%BF%E7%94%A8-OpenSSL-%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%AE%A1%E7%90%86%E8%AF%81%E4%B9%A6/"/>
    <id>https://andy0570.com/2019/05/09/%E4%BD%BF%E7%94%A8-OpenSSL-%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%AE%A1%E7%90%86%E8%AF%81%E4%B9%A6/</id>
    <published>2019-05-09T08:38:37.000Z</published>
    <updated>2019-05-16T08:47:15.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;img data-src=&quot;https://blog-andy0570-1256077835.cos.ap-shanghai.myqcloud.com/site_Images/111035.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="PKI&amp;密码学" scheme="https://andy0570.com/categories/PKI-%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
    <category term="OpenSSL" scheme="https://andy0570.com/tags/OpenSSL/"/>
    
  </entry>
  
  <entry>
    <title>Egg.js_Cookie 与 Session</title>
    <link href="https://andy0570.com/2019/04/26/Egg.js_Cookie%20%E4%B8%8E%20Session/"/>
    <id>https://andy0570.com/2019/04/26/Egg.js_Cookie%20%E4%B8%8E%20Session/</id>
    <published>2019-04-26T09:07:11.000Z</published>
    <updated>2019-05-01T15:54:24.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;参考：&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9lZ2dqcy5vcmcvemgtY24vY29yZS9jb29raWUtYW5kLXNlc3Npb24uaHRtbA==&quot;&gt;Egg.js 文档：Cookie 与 Session&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HTTP 请求都是无状态的，但是我们的 Web 应用通常都需要知道发起请求的人是谁。为了解决这个问题，HTTP 协议设计了一个特殊的请求头：Cookie。服务端可以通过响应头（set-cookie）将少量数据响应给客户端，浏览器会遵循协议将数据保存，并在下次请求同一个服务的时候带上（浏览器也会遵循协议，只在访问符合 Cookie 指定规则的网站时带上对应的 Cookie 来保证安全性）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Cookies&quot;&gt;&lt;a href=&quot;#Cookies&quot; class=&quot;headerlink&quot; title=&quot;Cookies&quot;&gt;&lt;/a&gt;Cookies&lt;/h1&gt;&lt;h2 id=&quot;Cookies-的作用&quot;&gt;&lt;a href=&quot;#Cookies-的作用&quot; class=&quot;headerlink&quot; title=&quot;Cookies 的作用&quot;&gt;&lt;/a&gt;Cookies 的作用&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;同一个浏览器访问同一个域的时候，不同页面之间的数据共享。&lt;/li&gt;
&lt;li&gt;数据持久化。（关闭浏览器后重新打开浏览器页面，数据还存在）。&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Node.js" scheme="https://andy0570.com/categories/Node-js/"/>
    
    
    <category term="Node.js" scheme="https://andy0570.com/tags/Node-js/"/>
    
    <category term="Egg.js" scheme="https://andy0570.com/tags/Egg-js/"/>
    
  </entry>
  
  <entry>
    <title>Egg.js_搭建爬虫系统显示新闻页面</title>
    <link href="https://andy0570.com/2019/04/25/Egg.js_%E6%90%AD%E5%BB%BA%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E6%98%BE%E7%A4%BA%E6%96%B0%E9%97%BB%E9%A1%B5%E9%9D%A2/"/>
    <id>https://andy0570.com/2019/04/25/Egg.js_%E6%90%AD%E5%BB%BA%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E6%98%BE%E7%A4%BA%E6%96%B0%E9%97%BB%E9%A1%B5%E9%9D%A2/</id>
    <published>2019-04-24T17:37:11.000Z</published>
    <updated>2019-05-10T19:16:00.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Demo-示例&quot;&gt;&lt;a href=&quot;#Demo-示例&quot; class=&quot;headerlink&quot; title=&quot;Demo 示例&quot;&gt;&lt;/a&gt;Demo 示例&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&quot;https://blog-andy0570-1256077835.cos.ap-shanghai.myqcloud.com/site_Images/080040.jpg&quot; alt=&quot;新闻列表页面&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Node.js" scheme="https://andy0570.com/categories/Node-js/"/>
    
    
    <category term="Node.js" scheme="https://andy0570.com/tags/Node-js/"/>
    
    <category term="Egg.js" scheme="https://andy0570.com/tags/Egg-js/"/>
    
  </entry>
  
  <entry>
    <title>Egg.js_GET 传值和动态路由</title>
    <link href="https://andy0570.com/2019/04/22/Egg.js_GET%20%E4%BC%A0%E5%80%BC%E5%92%8C%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1/"/>
    <id>https://andy0570.com/2019/04/22/Egg.js_GET%20%E4%BC%A0%E5%80%BC%E5%92%8C%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1/</id>
    <published>2019-04-22T07:20:00.000Z</published>
    <updated>2019-05-01T15:54:47.000Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;GET-传值&quot;&gt;&lt;a href=&quot;#GET-传值&quot; class=&quot;headerlink&quot; title=&quot;GET 传值&quot;&gt;&lt;/a&gt;GET 传值&lt;/h3&gt;&lt;p&gt;获取 URL 路径中的 GET 传值。&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-JavaScript&quot; data-language=&quot;JavaScript&quot;&gt;&lt;code class=&quot;language-JavaScript&quot;&gt;// app/controller/home.js
&#39;use strict&#39;;

const Controller = require(&#39;egg&#39;).Controller;

class HomeController extends Controller {
  async index() {
    // 获取 get 传值
    const query = this.ctx.query;
    // 返回响应信息
    this.ctx.response.body = query;
  }
}

module.exports = HomeController;

// app/router.js
// Router 主要用来描述请求URL和具体承担执行动作的 Controller 的对应关系
&#39;use strict&#39;;

module.exports = app =&amp;gt; {
  const { router, controller } = app;
  router.get(&#39;/&#39;, controller.home.index);
};&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;测试请求：&amp;lt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cDovLzEyNy4wLjAuMTo3MDAxLz9uYW1lPWFuZHkmYW1wO3Bhc3N3b3JkPTEyMzQ1Ng==&quot;&gt;http://127.0.0.1:7001/?name=andy&amp;amp;password=123456&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;br&gt;页面显示：{“name”:”andy”,”password”:”123456”}&lt;/p&gt;</summary>
    
    
    
    <category term="Node.js" scheme="https://andy0570.com/categories/Node-js/"/>
    
    
    <category term="Node.js" scheme="https://andy0570.com/tags/Node-js/"/>
    
    <category term="Egg.js" scheme="https://andy0570.com/tags/Egg-js/"/>
    
  </entry>
  
  <entry>
    <title>Egg.js_POST 提交表单时的 CSRF 安全验证</title>
    <link href="https://andy0570.com/2019/04/22/Egg.js_POST%20%E6%8F%90%E4%BA%A4%E8%A1%A8%E5%8D%95%E6%97%B6%E7%9A%84%20CSRF%20%E5%AE%89%E5%85%A8%E9%AA%8C%E8%AF%81/"/>
    <id>https://andy0570.com/2019/04/22/Egg.js_POST%20%E6%8F%90%E4%BA%A4%E8%A1%A8%E5%8D%95%E6%97%B6%E7%9A%84%20CSRF%20%E5%AE%89%E5%85%A8%E9%AA%8C%E8%AF%81/</id>
    <published>2019-04-22T05:31:00.000Z</published>
    <updated>2019-05-01T12:41:40.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Egg.js 在 POST 提交表单数据时会自动进行 CSRF 安全验证，需要进行配置。&lt;br&gt;参考：&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9lZ2dqcy5vcmcvemgtY24vY29yZS9zZWN1cml0eS5odG1sIyVFNSVBRSU4OSVFNSU4NSVBOCVFNSVBOCU4MSVFOCU4MyU4MS1jc3JmLSVFNyU5QSU4NCVFOSU5OCVCMiVFOCU4QyU4Mw==&quot;&gt;Egg.js 文档：安全威胁 CSRF 的防范&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;https://blog-andy0570-1256077835.cos.ap-shanghai.myqcloud.com/site_Images/080012.jpg&quot; alt=&quot;表单页面&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Node.js" scheme="https://andy0570.com/categories/Node-js/"/>
    
    
    <category term="Node.js" scheme="https://andy0570.com/tags/Node-js/"/>
    
    <category term="Egg.js" scheme="https://andy0570.com/tags/Egg-js/"/>
    
  </entry>
  
  <entry>
    <title>AWS 搭建 LVS+keepalived 步骤</title>
    <link href="https://andy0570.com/2019/04/03/AWS%20%E6%90%AD%E5%BB%BA%20LVS+keepalived%20%E6%AD%A5%E9%AA%A4/"/>
    <id>https://andy0570.com/2019/04/03/AWS%20%E6%90%AD%E5%BB%BA%20LVS+keepalived%20%E6%AD%A5%E9%AA%A4/</id>
    <published>2019-04-03T06:01:00.000Z</published>
    <updated>2019-05-01T12:40:51.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;注意&quot;&gt;&lt;a href=&quot;#注意&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;⚠️&lt;br&gt;经过测试，在 DR 模式和 TUN 模式下，由于 Web Server 返回的 IP 数据包无法穿透 AWS 的 VPC 网关，因此只有 NAT 模式是可行的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;LVS-Keepalived-架构&quot;&gt;&lt;a href=&quot;#LVS-Keepalived-架构&quot; class=&quot;headerlink&quot; title=&quot;LVS+Keepalived 架构&quot;&gt;&lt;/a&gt;LVS+Keepalived 架构&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&quot;https://blog-andy0570-1256077835.cos.ap-shanghai.myqcloud.com/site_Images/080029.jpg&quot; alt=&quot;LVS+Keepalived&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="云计算" scheme="https://andy0570.com/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="AWS" scheme="https://andy0570.com/tags/AWS/"/>
    
    <category term="LVS" scheme="https://andy0570.com/tags/LVS/"/>
    
    <category term="Keepalived" scheme="https://andy0570.com/tags/Keepalived/"/>
    
  </entry>
  
  <entry>
    <title>基于 LVS + keepalived 的双机热备负载均衡器</title>
    <link href="https://andy0570.com/2019/04/03/%E5%9F%BA%E4%BA%8E%20LVS%20+%20keepalived%20%E7%9A%84%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%99%A8/"/>
    <id>https://andy0570.com/2019/04/03/%E5%9F%BA%E4%BA%8E%20LVS%20+%20keepalived%20%E7%9A%84%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%99%A8/</id>
    <published>2019-04-03T05:53:00.000Z</published>
    <updated>2019-05-10T19:17:43.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;LVS&quot;&gt;&lt;a href=&quot;#LVS&quot; class=&quot;headerlink&quot; title=&quot;LVS&quot;&gt;&lt;/a&gt;LVS&lt;/h1&gt;&lt;h2 id=&quot;LVS-原理&quot;&gt;&lt;a href=&quot;#LVS-原理&quot; class=&quot;headerlink&quot; title=&quot;LVS 原理&quot;&gt;&lt;/a&gt;LVS 原理&lt;/h2&gt;&lt;h3 id=&quot;LVS-集群中的-IP-负载均衡技术&quot;&gt;&lt;a href=&quot;#LVS-集群中的-IP-负载均衡技术&quot; class=&quot;headerlink&quot; title=&quot;LVS 集群中的 IP 负载均衡技术&quot;&gt;&lt;/a&gt;LVS 集群中的 IP 负载均衡技术&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&quot;https://blog-andy0570-1256077835.cos.ap-shanghai.myqcloud.com/site_Images/080020.jpg&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;详情参考：&lt;a href=&quot;http://www.linuxvirtualserver.org/zh/lvs3.html&quot;&gt;&lt;strong&gt;LVS 集群中的 IP 负载均衡技术 @章文嵩博士&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="云计算" scheme="https://andy0570.com/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="LVS" scheme="https://andy0570.com/tags/LVS/"/>
    
    <category term="Keepalived" scheme="https://andy0570.com/tags/Keepalived/"/>
    
  </entry>
  
  <entry>
    <title>AWS System Manager</title>
    <link href="https://andy0570.com/2019/03/01/AWS%20System%20Manager/"/>
    <id>https://andy0570.com/2019/03/01/AWS%20System%20Manager/</id>
    <published>2019-03-01T02:45:00.000Z</published>
    <updated>2019-05-01T12:41:03.000Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;Mac-上安装-AWS-CLI-上的-plugin&quot;&gt;&lt;a href=&quot;#Mac-上安装-AWS-CLI-上的-plugin&quot; class=&quot;headerlink&quot; title=&quot;Mac 上安装 AWS CLI 上的 plugin&quot;&gt;&lt;/a&gt;Mac 上安装 AWS CLI 上的 plugin&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-shell&quot; data-language=&quot;shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# 1.下载文件&lt;/span&gt;
$ &lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://s3.amazonaws.com/session-manager-downloads/plugin/latest/mac/sessionmanager-bundle.zip&quot;&lt;/span&gt; -o &lt;span class=&quot;token string&quot;&gt;&quot;sessionmanager-bundle.zip&quot;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# 2.解压文件&lt;/span&gt;
$ &lt;span class=&quot;token function&quot;&gt;unzip&lt;/span&gt; sessionmanager-bundle.zip

&lt;span class=&quot;token comment&quot;&gt;# 3.安装插件&lt;/span&gt;
$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; ./sessionmanager-bundle/install -i /usr/local/sessionmanagerplugin -b /usr/local/bin/session-manager-plugin

&lt;span class=&quot;token comment&quot;&gt;# 4.插件安装成功后，检验插件的安装情况&lt;/span&gt;
$ session-manager-plugin --version
&lt;span class=&quot;token number&quot;&gt;1.0&lt;/span&gt;.37.0&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行命令进行登录：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-shell&quot; data-language=&quot;shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;aws ssm start-session --target instance-id&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="云计算" scheme="https://andy0570.com/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="AWS" scheme="https://andy0570.com/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>Apache Bench——ab 性能测试工具</title>
    <link href="https://andy0570.com/2019/02/26/Apache%20Bench%E2%80%94%E2%80%94ab%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    <id>https://andy0570.com/2019/02/26/Apache%20Bench%E2%80%94%E2%80%94ab%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/</id>
    <published>2019-02-26T05:07:00.000Z</published>
    <updated>2019-05-01T12:40:35.000Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;一、相关概念&quot;&gt;&lt;a href=&quot;#一、相关概念&quot; class=&quot;headerlink&quot; title=&quot;一、相关概念&quot;&gt;&lt;/a&gt;一、相关概念&lt;/h3&gt;&lt;p&gt;与压力测试有关的概念：&lt;/p&gt;
&lt;h4 id=&quot;1-吞吐率（Requests-per-second）&quot;&gt;&lt;a href=&quot;#1-吞吐率（Requests-per-second）&quot; class=&quot;headerlink&quot; title=&quot;1. 吞吐率（Requests per second）&quot;&gt;&lt;/a&gt;1. 吞吐率（Requests per second）&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;概念：服务器并发处理能力的量化描述，单位是 reqs/s，指的是&lt;strong&gt;某个并发用户数下单位时间内处理的请求数&lt;/strong&gt;。某个并发用户数下单位时间内能处理的最大请求数，称之为最大吞吐率。&lt;/li&gt;
&lt;li&gt;计算公式：总请求数 / 处理完成这些请求数所花费的时间，即&lt;br&gt;每秒请求数 = 完成请求数 / 测试时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;2-并发连接数（并发连接数）&quot;&gt;&lt;a href=&quot;#2-并发连接数（并发连接数）&quot; class=&quot;headerlink&quot; title=&quot;2. 并发连接数（并发连接数）&quot;&gt;&lt;/a&gt;2. 并发连接数（并发连接数）&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;概念：某个时刻服务器所接受的请求数目，简单的讲，就是一个会话。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;3-并发用户数（并发用户数，并发级别）&quot;&gt;&lt;a href=&quot;#3-并发用户数（并发用户数，并发级别）&quot; class=&quot;headerlink&quot; title=&quot;3. 并发用户数（并发用户数，并发级别）&quot;&gt;&lt;/a&gt;3. 并发用户数（并发用户数，并发级别）&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;概念：要注意区分这个概念和并发连接数之间的区别，一个用户可能同时会产生多个会话，也即连接数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;4-用户平均请求等待时间（每个请求的时间）&quot;&gt;&lt;a href=&quot;#4-用户平均请求等待时间（每个请求的时间）&quot; class=&quot;headerlink&quot; title=&quot;4. 用户平均请求等待时间（每个请求的时间）&quot;&gt;&lt;/a&gt;4. 用户平均请求等待时间（每个请求的时间）&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;计算公式：处理完成所有请求数所花费的时间 /（总请求数 / 并发用户数），即&lt;br&gt;每个请求的时间 = 测试所花费的时间 /（完整请求 / 并发级别）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;5-服务器平均请求等待时间（每个请求的时间：跨所有并发请求）&quot;&gt;&lt;a href=&quot;#5-服务器平均请求等待时间（每个请求的时间：跨所有并发请求）&quot; class=&quot;headerlink&quot; title=&quot;5. 服务器平均请求等待时间（每个请求的时间：跨所有并发请求）&quot;&gt;&lt;/a&gt;5. 服务器平均请求等待时间（每个请求的时间：跨所有并发请求）&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;计算公式：处理完成所有请求数所花费的时间 / 总请求数，即所花费的时间 /testsComplete 请求。&lt;br&gt;可以看到，它是吞吐率的倒数。&lt;br&gt;同时，它也 = 用户平均请求等待时间 / 并发用户数，即&lt;br&gt;每个请求的时间 / 并发级别。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="云计算" scheme="https://andy0570.com/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Linux" scheme="https://andy0570.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>iTerm2 的 DIY 配置</title>
    <link href="https://andy0570.com/2019/02/25/iTerm2%20%E7%9A%84%20DIY%20%E9%85%8D%E7%BD%AE/"/>
    <id>https://andy0570.com/2019/02/25/iTerm2%20%E7%9A%84%20DIY%20%E9%85%8D%E7%BD%AE/</id>
    <published>2019-02-25T03:07:00.000Z</published>
    <updated>2019-04-28T08:01:32.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;img data-src=&quot;https://blog-andy0570-1256077835.cos.ap-shanghai.myqcloud.com/site_Images/080120.jpg&quot; alt=&quot;iTerm2&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="开发工具&amp;Mac应用" scheme="https://andy0570.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7-Mac%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="Mac" scheme="https://andy0570.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>《AWS 云计算实战》11. 基础设施解耦：ELB 与 SQS</title>
    <link href="https://andy0570.com/2019/02/21/%E3%80%8AAWS%E4%BA%91%E8%AE%A1%E7%AE%97%E5%AE%9E%E6%88%98%E3%80%8B11.%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E8%A7%A3%E8%80%A6%EF%BC%9AELB%20%E4%B8%8E%20SQS/"/>
    <id>https://andy0570.com/2019/02/21/%E3%80%8AAWS%E4%BA%91%E8%AE%A1%E7%AE%97%E5%AE%9E%E6%88%98%E3%80%8B11.%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E8%A7%A3%E8%80%A6%EF%BC%9AELB%20%E4%B8%8E%20SQS/</id>
    <published>2019-02-21T02:18:00.000Z</published>
    <updated>2019-04-28T08:01:32.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;AWS 的解决方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9hbWF6b25hd3MtY2hpbmEuY29tL2NuL2VsYXN0aWNsb2FkYmFsYW5jaW5nLz9uYzI9aF9tMQ==&quot;&gt;弹性负载均衡器（ELB）&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;，用于同步解耦。&lt;ul&gt;
&lt;li&gt;Application Load Balancer；&lt;/li&gt;
&lt;li&gt;网络负载均衡器；&lt;/li&gt;
&lt;li&gt;Classic Load Balancer；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;消息队列服务（SQS），用于异步解耦。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="云计算" scheme="https://andy0570.com/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="AWS" scheme="https://andy0570.com/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>《AWS 云计算实战》12. 容错设计</title>
    <link href="https://andy0570.com/2019/02/21/%E3%80%8AAWS%E4%BA%91%E8%AE%A1%E7%AE%97%E5%AE%9E%E6%88%98%E3%80%8B12.%E5%AE%B9%E9%94%99%E8%AE%BE%E8%AE%A1/"/>
    <id>https://andy0570.com/2019/02/21/%E3%80%8AAWS%E4%BA%91%E8%AE%A1%E7%AE%97%E5%AE%9E%E6%88%98%E3%80%8B12.%E5%AE%B9%E9%94%99%E8%AE%BE%E8%AE%A1/</id>
    <published>2019-02-21T02:18:00.000Z</published>
    <updated>2019-04-28T08:01:32.000Z</updated>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;容错系统就是为故障而构建的。如果发生故障，容错系统将不会中断，并且可以继续处理请求。&lt;/li&gt;
&lt;li&gt;EC2 虚拟服务器，默认情况下不是容错的。&lt;/li&gt;
&lt;li&gt;单点故障（SPOF），如果一个硬件发生故障，整个服务中断。&lt;/li&gt;
&lt;li&gt;AWS 解决方案：自动扩展组（auto-scaling group）、ELB 和 SQS。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;没有（单点故障）—— 在出现故障时，不能处理请求。&lt;/li&gt;
&lt;li&gt;高可用性 —— 在出现故障时，需要一些时间直到像之前一样处理请求。&lt;/li&gt;
&lt;li&gt;容错 —— 在出现故障时，请求会像之前一样得到处理，并且没有任何可用性问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="云计算" scheme="https://andy0570.com/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="AWS" scheme="https://andy0570.com/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>《AWS 云计算实战》10. 实现高可用性：可用区、自动扩展以及 CloudWatch</title>
    <link href="https://andy0570.com/2019/02/21/%E3%80%8AAWS%E4%BA%91%E8%AE%A1%E7%AE%97%E5%AE%9E%E6%88%98%E3%80%8B10.%20%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7%EF%BC%9A%E5%8F%AF%E7%94%A8%E5%8C%BA%E3%80%81%E8%87%AA%E5%8A%A8%E6%89%A9%E5%B1%95%E4%BB%A5%E5%8F%8A%20CloudWatch/"/>
    <id>https://andy0570.com/2019/02/21/%E3%80%8AAWS%E4%BA%91%E8%AE%A1%E7%AE%97%E5%AE%9E%E6%88%98%E3%80%8B10.%20%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7%EF%BC%9A%E5%8F%AF%E7%94%A8%E5%8C%BA%E3%80%81%E8%87%AA%E5%8A%A8%E6%89%A9%E5%B1%95%E4%BB%A5%E5%8F%8A%20CloudWatch/</id>
    <published>2019-02-21T02:17:00.000Z</published>
    <updated>2019-04-28T08:01:32.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;如何基于 EC2 实例搭建一个高可用性架构？&lt;/p&gt;
&lt;p&gt;哈佛研究团队对高可用性的定义：在一年内需要满足 99.99% 的正常运行。&lt;/p&gt;
&lt;h3 id=&quot;高可用性-amp-容错&quot;&gt;&lt;a href=&quot;#高可用性-amp-容错&quot; class=&quot;headerlink&quot; title=&quot;高可用性&amp;amp;容错&quot;&gt;&lt;/a&gt;高可用性 &amp;amp; 容错&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;一个高可用性系统&lt;/strong&gt;可以在较短的停机时间内自动从故障中恢复。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;容错系统&lt;/strong&gt;要求系统提供的服务不会因为一个组件失效而无法提供服务。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;AWS-提供了构建基于-EC2-实例的高可用系统的工具：&quot;&gt;&lt;a href=&quot;#AWS-提供了构建基于-EC2-实例的高可用系统的工具：&quot; class=&quot;headerlink&quot; title=&quot;AWS 提供了构建基于 EC2 实例的高可用系统的工具：&quot;&gt;&lt;/a&gt;AWS 提供了构建基于 EC2 实例的高可用系统的工具：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;利用 CloudWatch 监控虚拟服务器的运行状况。如果需要，自动触发故障恢复；&lt;/li&gt;
&lt;li&gt;使用多个隔离的数据中心；&lt;/li&gt;
&lt;li&gt;使用自动扩展（auto-scaling）确保拥有一定数量的虚拟服务器用以自动替换失效的实例；&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="云计算" scheme="https://andy0570.com/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="AWS" scheme="https://andy0570.com/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>iOS Runtime - Associated Objects</title>
    <link href="https://andy0570.com/2019/01/26/iOS%20Runtime%20-%20Associated%20Objects/"/>
    <id>https://andy0570.com/2019/01/26/iOS%20Runtime%20-%20Associated%20Objects/</id>
    <published>2019-01-26T09:06:00.000Z</published>
    <updated>2019-05-01T12:42:09.000Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;objc-setAssociatedObject-设置关联对象&quot;&gt;&lt;a href=&quot;#objc-setAssociatedObject-设置关联对象&quot; class=&quot;headerlink&quot; title=&quot;objc_setAssociatedObject() - 设置关联对象&quot;&gt;&lt;/a&gt;&lt;code&gt;objc_setAssociatedObject()&lt;/code&gt; - 设置关联对象&lt;/h3&gt;&lt;p&gt;用于给对象添加关联对象，传入 &lt;code&gt;nil&lt;/code&gt; 则可以移除已有的关联对象；&lt;/p&gt;
&lt;p&gt;让一个对象和另一个对象关联起来，即一个对象保持对另一个对象的引用，并可以获取这个对象。关键字是一个 void 类型的指针。每个关键字必须是唯一的，通常都是会采用静态变量来作为关键字。&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-objective-c&quot; data-language=&quot;objective-c&quot;&gt;&lt;code class=&quot;language-objective-c&quot;&gt;/** 
 * Sets an associated value for a given object using a given key and association policy.
 * 
 * @param object 关联的源对象.
 * @param key 关联的key.
 * @param value 通过key值关联对象，通过将此个值置成nil来清除关联.
 * @param policy 关联策略
 * 
 * @see objc_setAssociatedObject
 * @see objc_removeAssociatedObjects
 */
OBJC_EXPORT void
objc_setAssociatedObject(id _Nonnull object, const void * _Nonnull key,
                         id _Nullable value, objc_AssociationPolicy policy)
    OBJC_AVAILABLE(10.6, 3.1, 9.0, 1.0, 2.0);&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="iOS" scheme="https://andy0570.com/categories/iOS/"/>
    
    
    <category term="iOS" scheme="https://andy0570.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS 应用：Deep Whois</title>
    <link href="https://andy0570.com/2019/01/25/iOS%20%E5%BA%94%E7%94%A8%20Deep%20Whois/"/>
    <id>https://andy0570.com/2019/01/25/iOS%20%E5%BA%94%E7%94%A8%20Deep%20Whois/</id>
    <published>2019-01-25T05:36:00.000Z</published>
    <updated>2019-05-01T12:42:00.000Z</updated>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2NuL2FwcC9kZWVwLXdob2lzL2lkMzI4ODk1MDAwP210PTg=&quot;&gt;下载链接&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Web 查询：&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93aG9pcy5pY2Fubi5vcmcvemg=&quot;&gt;https://whois.icann.org/zh&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt; 👍👍👍&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Deep Whois 是一款网络管理专业软件，你可以用它通过 IP 地址和 Hostname 查询 Whois 相关信息。你可以在 app 中查阅所有的 whois 数据，比如域名、TLD、网址、IDN、IP 地址（IPv4 和 IPv6）。&lt;/p&gt;
&lt;p&gt;Deep Whois 是最完整，最先进的 WHOIS 应用程序。&lt;br&gt;该工具允许您在所有 WHOIS 数据库中查找所有主机名，域名，TLD（顶级域名），IDN（Internationalized Domain Names，国际化域名），IP 地址（IPv4 和 IPv6），IP 网络和自治系统（ASN，ISP ID）的信息。&lt;br&gt;Deep Whois 开箱即用，可以查找所有权，国家和更多有关所有内容的信息，无需混淆复杂的选项和服务器选择。&lt;/p&gt;</summary>
    
    
    
    <category term="开发工具&amp;Mac应用" scheme="https://andy0570.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7-Mac%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="iOS 应用" scheme="https://andy0570.com/tags/iOS-%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>大型网站技术架构_8. 网站的安全架构</title>
    <link href="https://andy0570.com/2019/01/23/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84_8.%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%89%E5%85%A8%E6%9E%B6%E6%9E%84/"/>
    <id>https://andy0570.com/2019/01/23/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84_8.%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%89%E5%85%A8%E6%9E%B6%E6%9E%84/</id>
    <published>2019-01-23T10:13:00.000Z</published>
    <updated>2019-05-01T12:40:03.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;8-网站的安全架构&quot;&gt;&lt;a href=&quot;#8-网站的安全架构&quot; class=&quot;headerlink&quot; title=&quot;8. 网站的安全架构&quot;&gt;&lt;/a&gt;8. 网站的安全架构&lt;/h1&gt;&lt;h2 id=&quot;8-1-网站应用攻击与防御&quot;&gt;&lt;a href=&quot;#8-1-网站应用攻击与防御&quot; class=&quot;headerlink&quot; title=&quot;8.1 网站应用攻击与防御&quot;&gt;&lt;/a&gt;8.1 网站应用攻击与防御&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&quot;https://blog-andy0570-1256077835.cos.ap-shanghai.myqcloud.com/site_Images/080129.jpg&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="云计算" scheme="https://andy0570.com/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="大型网站技术架构" scheme="https://andy0570.com/tags/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>大型网站技术架构_6. 网站的伸缩性架构</title>
    <link href="https://andy0570.com/2019/01/23/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84_6.%E7%BD%91%E7%AB%99%E7%9A%84%E4%BC%B8%E7%BC%A9%E6%80%A7%E6%9E%B6%E6%9E%84/"/>
    <id>https://andy0570.com/2019/01/23/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84_6.%E7%BD%91%E7%AB%99%E7%9A%84%E4%BC%B8%E7%BC%A9%E6%80%A7%E6%9E%B6%E6%9E%84/</id>
    <published>2019-01-23T10:12:00.000Z</published>
    <updated>2019-05-01T12:39:41.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;6-网站的伸缩性架构&quot;&gt;&lt;a href=&quot;#6-网站的伸缩性架构&quot; class=&quot;headerlink&quot; title=&quot;6. 网站的伸缩性架构&quot;&gt;&lt;/a&gt;6. 网站的伸缩性架构&lt;/h1&gt;&lt;p&gt;网站伸缩性：不需要改变网站的软硬件设计，仅仅通过改变部署的服务器数量就可以扩大或者缩小网站的服务处理能力。&lt;/p&gt;
&lt;h2 id=&quot;6-1-网站架构的伸缩性设计&quot;&gt;&lt;a href=&quot;#6-1-网站架构的伸缩性设计&quot; class=&quot;headerlink&quot; title=&quot;6.1 网站架构的伸缩性设计&quot;&gt;&lt;/a&gt;6.1 网站架构的伸缩性设计&lt;/h2&gt;&lt;p&gt;网站的伸缩性设计：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根据功能进行物理分离实现伸缩（不同的服务器部署不同的服务）；&lt;/li&gt;
&lt;li&gt;单一功能通过集群实现伸缩（集群内的多台服务器部署相同的服务）；&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;不同功能进行物理分离实现伸缩&quot;&gt;&lt;a href=&quot;#不同功能进行物理分离实现伸缩&quot; class=&quot;headerlink&quot; title=&quot;不同功能进行物理分离实现伸缩&quot;&gt;&lt;/a&gt;不同功能进行物理分离实现伸缩&lt;/h3&gt;&lt;p&gt;纵向分离（分层后分离）：将业务处理流程上的不同部分分离部署。&lt;br&gt;横向分离（业务分割后分离）：将不同的业务模块分离部署。&lt;/p&gt;</summary>
    
    
    
    <category term="云计算" scheme="https://andy0570.com/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="大型网站技术架构" scheme="https://andy0570.com/tags/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>大型网站技术架构_7. 网站的可扩展架构</title>
    <link href="https://andy0570.com/2019/01/23/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84_7.%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%AF%E6%89%A9%E5%B1%95%E6%9E%B6%E6%9E%84/"/>
    <id>https://andy0570.com/2019/01/23/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84_7.%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%AF%E6%89%A9%E5%B1%95%E6%9E%B6%E6%9E%84/</id>
    <published>2019-01-23T10:12:00.000Z</published>
    <updated>2019-05-01T12:39:53.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;7-网站的可扩展架构&quot;&gt;&lt;a href=&quot;#7-网站的可扩展架构&quot; class=&quot;headerlink&quot; title=&quot;7. 网站的可扩展架构&quot;&gt;&lt;/a&gt;7. 网站的可扩展架构&lt;/h1&gt;&lt;p&gt;网站的扩展性架构设计：在对现有系统影响最小的情况下，系统功能可持续扩展及提升的能力。&lt;/p&gt;
&lt;h3 id=&quot;扩展性-amp-伸缩性&quot;&gt;&lt;a href=&quot;#扩展性-amp-伸缩性&quot; class=&quot;headerlink&quot; title=&quot;扩展性 &amp;amp; 伸缩性&quot;&gt;&lt;/a&gt;扩展性 &amp;amp; 伸缩性&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;扩展性（Extensibility）&lt;/strong&gt;&lt;br&gt;指对现有系统影响最小的情况下，系统功能可持续扩展或提升的能力。表现在系统基础设施稳定不需要经常变更，应用之间较少依赖和耦合，对需求变更可以敏捷响应。它是系统架构设计层面的开闭原则（对扩展开放，对修改关闭），架构设计考虑未来功能扩展，当系统增加新功能时，不需要对现有系统的结构和代码进行修改。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;伸缩性（Scalability）&lt;/strong&gt;&lt;br&gt;指系统能够通过增加（减少）自身资源规模的方式增强（减少）自己计算处理事务的能力。如果这种增减是成比例的，就被称作线性伸缩性。在网站架构中，通常指利用集群的方式增加服务器数量、提高系统的整体事务吞吐能力。&lt;/p&gt;</summary>
    
    
    
    <category term="云计算" scheme="https://andy0570.com/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="大型网站技术架构" scheme="https://andy0570.com/tags/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>大型网站技术架构_4. 网站的高性能架构</title>
    <link href="https://andy0570.com/2019/01/23/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84_4.%E7%BD%91%E7%AB%99%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E6%9E%B6%E6%9E%84/"/>
    <id>https://andy0570.com/2019/01/23/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84_4.%E7%BD%91%E7%AB%99%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E6%9E%B6%E6%9E%84/</id>
    <published>2019-01-23T10:11:00.000Z</published>
    <updated>2019-05-01T12:39:14.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;4-网站的高性能架构&quot;&gt;&lt;a href=&quot;#4-网站的高性能架构&quot; class=&quot;headerlink&quot; title=&quot;4. 网站的高性能架构&quot;&gt;&lt;/a&gt;4. 网站的高性能架构&lt;/h1&gt;&lt;p&gt;网站性能优化的主要工作：改善高并发用户访问情况下的网站响应速度。&lt;/p&gt;
&lt;h2 id=&quot;4-1-不同视角下的网站性能&quot;&gt;&lt;a href=&quot;#4-1-不同视角下的网站性能&quot; class=&quot;headerlink&quot; title=&quot;4.1 不同视角下的网站性能&quot;&gt;&lt;/a&gt;4.1 不同视角下的网站性能&lt;/h2&gt;&lt;h3 id=&quot;用户角度&quot;&gt;&lt;a href=&quot;#用户角度&quot; class=&quot;headerlink&quot; title=&quot;用户角度&quot;&gt;&lt;/a&gt;用户角度&lt;/h3&gt;&lt;p&gt;从用户的角度来说，网站的性能就是用户在浏览器上直观感受到的网站响应速度。&lt;/p&gt;
&lt;p&gt;在实践中，使用一些前端架构优化手段，通过优化页面 HTML 式样、利用浏览器端的并发和异步特性、调整浏览器缓存策略、使用 CDN 服务、反向代理等手段，使浏览器尽快地显示用户感兴趣的内容、尽可能近地获取页面内容，即使不优化应用程序和架构，也可以很大程度地改善用户视角下的网站性能。&lt;/p&gt;
&lt;h3 id=&quot;开发人员&quot;&gt;&lt;a href=&quot;#开发人员&quot; class=&quot;headerlink&quot; title=&quot;开发人员&quot;&gt;&lt;/a&gt;开发人员&lt;/h3&gt;&lt;p&gt;应用程序本身及其相关子系统的性能：响应延迟、系统吞吐量、并发处理能力、系统稳定性。&lt;/p&gt;
&lt;p&gt;优化手段：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用缓存加速数独读取；&lt;/li&gt;
&lt;li&gt;使用集群提高吞吐能力；&lt;/li&gt;
&lt;li&gt;使用异步消息加快请求响应及实现削峰；&lt;/li&gt;
&lt;li&gt;使用代码优化手段改善程序性能；&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="云计算" scheme="https://andy0570.com/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="大型网站技术架构" scheme="https://andy0570.com/tags/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>大型网站技术架构_5. 网站的高可用架构</title>
    <link href="https://andy0570.com/2019/01/23/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84_5.%E7%BD%91%E7%AB%99%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84/"/>
    <id>https://andy0570.com/2019/01/23/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84_5.%E7%BD%91%E7%AB%99%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84/</id>
    <published>2019-01-23T10:11:00.000Z</published>
    <updated>2019-05-01T12:39:24.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;5-网站的高可用架构&quot;&gt;&lt;a href=&quot;#5-网站的高可用架构&quot; class=&quot;headerlink&quot; title=&quot;5. 网站的高可用架构&quot;&gt;&lt;/a&gt;5. 网站的高可用架构&lt;/h1&gt;&lt;p&gt;网站的可用性（Availablilty）描述&lt;strong&gt;网站可有效访问的特性&lt;/strong&gt;。&lt;br&gt;网站的有用性（Usability），通常也被译作可用性，但是后者强调的是网站的有用性，即对最终用户的使用价值。&lt;/p&gt;
&lt;h2 id=&quot;5-1-网站可用性度量&quot;&gt;&lt;a href=&quot;#5-1-网站可用性度量&quot; class=&quot;headerlink&quot; title=&quot;5.1 网站可用性度量&quot;&gt;&lt;/a&gt;5.1 网站可用性度量&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;网站不可用时间（故障时间）= 故障修复时间点 - 故障发现（报告）时间点。&lt;br&gt;网站年度可用性指标 = （1 - 网站不可用时间 / 年度总时间）* 100%。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;5-2-网站可用性考核&quot;&gt;&lt;a href=&quot;#5-2-网站可用性考核&quot; class=&quot;headerlink&quot; title=&quot;5.2 网站可用性考核&quot;&gt;&lt;/a&gt;5.2 网站可用性考核&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;故障分&lt;/strong&gt;是指对网站故障进行分类加权计算故障责任的方法。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;故障分的计算公式：&lt;br&gt;故障分 = 故障时间（分钟）* 故障权重&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;网站故障分类&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;th&gt;权重&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;事故级故障&lt;/td&gt;
&lt;td&gt;严重故障，网站整体不可用&lt;/td&gt;
&lt;td&gt; 100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A 类故障&lt;/td&gt;
&lt;td&gt;网站访问不顺畅或核心功能不可用&lt;/td&gt;
&lt;td&gt; 20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B 类故障&lt;/td&gt;
&lt;td&gt;非核心功能不可用，或核心功能少数用户不可用&lt;/td&gt;
&lt;td&gt; 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C 类故障&lt;/td&gt;
&lt;td&gt;以上故障以外的其他故障&lt;/td&gt;
&lt;td&gt; 1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="云计算" scheme="https://andy0570.com/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="大型网站技术架构" scheme="https://andy0570.com/tags/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
</feed>
